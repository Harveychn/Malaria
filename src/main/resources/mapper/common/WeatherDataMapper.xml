<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edupractice.malaria.modules.common.dao.WeatherDataMapper" >
  <resultMap id="BaseResultMap" type="com.edupractice.malaria.modules.common.pojo.WeatherData" >
    <constructor >
      <idArg column="weather_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="station_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="weather_year" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="weather_month" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="weather_day" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="precipitation2020" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="maximum_wind_speed" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="direction_maximum_wind_speed" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ave_pressure" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ave_wind_speed" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ave_temperature" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ave_vapor_pressure" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ave_relative_humidity" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sunshine_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="daily_min_pressure" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="daily_min_temperature" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="daily_max_pressure" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="daily_max_temperature" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="max_wind_speed" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="direction_max_windspeed" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="min_relative_humidity" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    weather_id, station_id, weather_year, weather_month, weather_day, precipitation2020, 
    maximum_wind_speed, direction_maximum_wind_speed, ave_pressure, ave_wind_speed, ave_temperature, 
    ave_vapor_pressure, ave_relative_humidity, sunshine_time, daily_min_pressure, daily_min_temperature, 
    daily_max_pressure, daily_max_temperature, max_wind_speed, direction_max_windspeed, 
    min_relative_humidity
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from weather_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from weather_data
    where weather_id = #{weatherId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from weather_data
    where weather_id = #{weatherId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherDataExample" >
    delete from weather_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherData" useGeneratedKeys="true" keyProperty="weatherId" >
    insert into weather_data (station_id, weather_year, weather_month, 
      weather_day, precipitation2020, maximum_wind_speed, 
      direction_maximum_wind_speed, ave_pressure, 
      ave_wind_speed, ave_temperature, ave_vapor_pressure, 
      ave_relative_humidity, sunshine_time, daily_min_pressure, 
      daily_min_temperature, daily_max_pressure, 
      daily_max_temperature, max_wind_speed, direction_max_windspeed, 
      min_relative_humidity)
    values (#{stationId,jdbcType=INTEGER}, #{weatherYear,jdbcType=INTEGER}, #{weatherMonth,jdbcType=INTEGER}, 
      #{weatherDay,jdbcType=INTEGER}, #{precipitation2020,jdbcType=VARCHAR}, #{maximumWindSpeed,jdbcType=INTEGER}, 
      #{directionMaximumWindSpeed,jdbcType=VARCHAR}, #{avePressure,jdbcType=INTEGER}, 
      #{aveWindSpeed,jdbcType=INTEGER}, #{aveTemperature,jdbcType=INTEGER}, #{aveVaporPressure,jdbcType=INTEGER}, 
      #{aveRelativeHumidity,jdbcType=INTEGER}, #{sunshineTime,jdbcType=INTEGER}, #{dailyMinPressure,jdbcType=INTEGER}, 
      #{dailyMinTemperature,jdbcType=INTEGER}, #{dailyMaxPressure,jdbcType=INTEGER}, 
      #{dailyMaxTemperature,jdbcType=INTEGER}, #{maxWindSpeed,jdbcType=INTEGER}, #{directionMaxWindspeed,jdbcType=VARCHAR}, 
      #{minRelativeHumidity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherData" useGeneratedKeys="true" keyProperty="weatherId" >
    insert into weather_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        station_id,
      </if>
      <if test="weatherYear != null" >
        weather_year,
      </if>
      <if test="weatherMonth != null" >
        weather_month,
      </if>
      <if test="weatherDay != null" >
        weather_day,
      </if>
      <if test="precipitation2020 != null" >
        precipitation2020,
      </if>
      <if test="maximumWindSpeed != null" >
        maximum_wind_speed,
      </if>
      <if test="directionMaximumWindSpeed != null" >
        direction_maximum_wind_speed,
      </if>
      <if test="avePressure != null" >
        ave_pressure,
      </if>
      <if test="aveWindSpeed != null" >
        ave_wind_speed,
      </if>
      <if test="aveTemperature != null" >
        ave_temperature,
      </if>
      <if test="aveVaporPressure != null" >
        ave_vapor_pressure,
      </if>
      <if test="aveRelativeHumidity != null" >
        ave_relative_humidity,
      </if>
      <if test="sunshineTime != null" >
        sunshine_time,
      </if>
      <if test="dailyMinPressure != null" >
        daily_min_pressure,
      </if>
      <if test="dailyMinTemperature != null" >
        daily_min_temperature,
      </if>
      <if test="dailyMaxPressure != null" >
        daily_max_pressure,
      </if>
      <if test="dailyMaxTemperature != null" >
        daily_max_temperature,
      </if>
      <if test="maxWindSpeed != null" >
        max_wind_speed,
      </if>
      <if test="directionMaxWindspeed != null" >
        direction_max_windspeed,
      </if>
      <if test="minRelativeHumidity != null" >
        min_relative_humidity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stationId != null" >
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="weatherYear != null" >
        #{weatherYear,jdbcType=INTEGER},
      </if>
      <if test="weatherMonth != null" >
        #{weatherMonth,jdbcType=INTEGER},
      </if>
      <if test="weatherDay != null" >
        #{weatherDay,jdbcType=INTEGER},
      </if>
      <if test="precipitation2020 != null" >
        #{precipitation2020,jdbcType=VARCHAR},
      </if>
      <if test="maximumWindSpeed != null" >
        #{maximumWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="directionMaximumWindSpeed != null" >
        #{directionMaximumWindSpeed,jdbcType=VARCHAR},
      </if>
      <if test="avePressure != null" >
        #{avePressure,jdbcType=INTEGER},
      </if>
      <if test="aveWindSpeed != null" >
        #{aveWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="aveTemperature != null" >
        #{aveTemperature,jdbcType=INTEGER},
      </if>
      <if test="aveVaporPressure != null" >
        #{aveVaporPressure,jdbcType=INTEGER},
      </if>
      <if test="aveRelativeHumidity != null" >
        #{aveRelativeHumidity,jdbcType=INTEGER},
      </if>
      <if test="sunshineTime != null" >
        #{sunshineTime,jdbcType=INTEGER},
      </if>
      <if test="dailyMinPressure != null" >
        #{dailyMinPressure,jdbcType=INTEGER},
      </if>
      <if test="dailyMinTemperature != null" >
        #{dailyMinTemperature,jdbcType=INTEGER},
      </if>
      <if test="dailyMaxPressure != null" >
        #{dailyMaxPressure,jdbcType=INTEGER},
      </if>
      <if test="dailyMaxTemperature != null" >
        #{dailyMaxTemperature,jdbcType=INTEGER},
      </if>
      <if test="maxWindSpeed != null" >
        #{maxWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="directionMaxWindspeed != null" >
        #{directionMaxWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="minRelativeHumidity != null" >
        #{minRelativeHumidity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherDataExample" resultType="java.lang.Integer" >
    select count(*) from weather_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update weather_data
    <set >
      <if test="record.weatherId != null" >
        weather_id = #{record.weatherId,jdbcType=INTEGER},
      </if>
      <if test="record.stationId != null" >
        station_id = #{record.stationId,jdbcType=INTEGER},
      </if>
      <if test="record.weatherYear != null" >
        weather_year = #{record.weatherYear,jdbcType=INTEGER},
      </if>
      <if test="record.weatherMonth != null" >
        weather_month = #{record.weatherMonth,jdbcType=INTEGER},
      </if>
      <if test="record.weatherDay != null" >
        weather_day = #{record.weatherDay,jdbcType=INTEGER},
      </if>
      <if test="record.precipitation2020 != null" >
        precipitation2020 = #{record.precipitation2020,jdbcType=VARCHAR},
      </if>
      <if test="record.maximumWindSpeed != null" >
        maximum_wind_speed = #{record.maximumWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="record.directionMaximumWindSpeed != null" >
        direction_maximum_wind_speed = #{record.directionMaximumWindSpeed,jdbcType=VARCHAR},
      </if>
      <if test="record.avePressure != null" >
        ave_pressure = #{record.avePressure,jdbcType=INTEGER},
      </if>
      <if test="record.aveWindSpeed != null" >
        ave_wind_speed = #{record.aveWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="record.aveTemperature != null" >
        ave_temperature = #{record.aveTemperature,jdbcType=INTEGER},
      </if>
      <if test="record.aveVaporPressure != null" >
        ave_vapor_pressure = #{record.aveVaporPressure,jdbcType=INTEGER},
      </if>
      <if test="record.aveRelativeHumidity != null" >
        ave_relative_humidity = #{record.aveRelativeHumidity,jdbcType=INTEGER},
      </if>
      <if test="record.sunshineTime != null" >
        sunshine_time = #{record.sunshineTime,jdbcType=INTEGER},
      </if>
      <if test="record.dailyMinPressure != null" >
        daily_min_pressure = #{record.dailyMinPressure,jdbcType=INTEGER},
      </if>
      <if test="record.dailyMinTemperature != null" >
        daily_min_temperature = #{record.dailyMinTemperature,jdbcType=INTEGER},
      </if>
      <if test="record.dailyMaxPressure != null" >
        daily_max_pressure = #{record.dailyMaxPressure,jdbcType=INTEGER},
      </if>
      <if test="record.dailyMaxTemperature != null" >
        daily_max_temperature = #{record.dailyMaxTemperature,jdbcType=INTEGER},
      </if>
      <if test="record.maxWindSpeed != null" >
        max_wind_speed = #{record.maxWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="record.directionMaxWindspeed != null" >
        direction_max_windspeed = #{record.directionMaxWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="record.minRelativeHumidity != null" >
        min_relative_humidity = #{record.minRelativeHumidity,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update weather_data
    set weather_id = #{record.weatherId,jdbcType=INTEGER},
      station_id = #{record.stationId,jdbcType=INTEGER},
      weather_year = #{record.weatherYear,jdbcType=INTEGER},
      weather_month = #{record.weatherMonth,jdbcType=INTEGER},
      weather_day = #{record.weatherDay,jdbcType=INTEGER},
      precipitation2020 = #{record.precipitation2020,jdbcType=VARCHAR},
      maximum_wind_speed = #{record.maximumWindSpeed,jdbcType=INTEGER},
      direction_maximum_wind_speed = #{record.directionMaximumWindSpeed,jdbcType=VARCHAR},
      ave_pressure = #{record.avePressure,jdbcType=INTEGER},
      ave_wind_speed = #{record.aveWindSpeed,jdbcType=INTEGER},
      ave_temperature = #{record.aveTemperature,jdbcType=INTEGER},
      ave_vapor_pressure = #{record.aveVaporPressure,jdbcType=INTEGER},
      ave_relative_humidity = #{record.aveRelativeHumidity,jdbcType=INTEGER},
      sunshine_time = #{record.sunshineTime,jdbcType=INTEGER},
      daily_min_pressure = #{record.dailyMinPressure,jdbcType=INTEGER},
      daily_min_temperature = #{record.dailyMinTemperature,jdbcType=INTEGER},
      daily_max_pressure = #{record.dailyMaxPressure,jdbcType=INTEGER},
      daily_max_temperature = #{record.dailyMaxTemperature,jdbcType=INTEGER},
      max_wind_speed = #{record.maxWindSpeed,jdbcType=INTEGER},
      direction_max_windspeed = #{record.directionMaxWindspeed,jdbcType=VARCHAR},
      min_relative_humidity = #{record.minRelativeHumidity,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherData" >
    update weather_data
    <set >
      <if test="stationId != null" >
        station_id = #{stationId,jdbcType=INTEGER},
      </if>
      <if test="weatherYear != null" >
        weather_year = #{weatherYear,jdbcType=INTEGER},
      </if>
      <if test="weatherMonth != null" >
        weather_month = #{weatherMonth,jdbcType=INTEGER},
      </if>
      <if test="weatherDay != null" >
        weather_day = #{weatherDay,jdbcType=INTEGER},
      </if>
      <if test="precipitation2020 != null" >
        precipitation2020 = #{precipitation2020,jdbcType=VARCHAR},
      </if>
      <if test="maximumWindSpeed != null" >
        maximum_wind_speed = #{maximumWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="directionMaximumWindSpeed != null" >
        direction_maximum_wind_speed = #{directionMaximumWindSpeed,jdbcType=VARCHAR},
      </if>
      <if test="avePressure != null" >
        ave_pressure = #{avePressure,jdbcType=INTEGER},
      </if>
      <if test="aveWindSpeed != null" >
        ave_wind_speed = #{aveWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="aveTemperature != null" >
        ave_temperature = #{aveTemperature,jdbcType=INTEGER},
      </if>
      <if test="aveVaporPressure != null" >
        ave_vapor_pressure = #{aveVaporPressure,jdbcType=INTEGER},
      </if>
      <if test="aveRelativeHumidity != null" >
        ave_relative_humidity = #{aveRelativeHumidity,jdbcType=INTEGER},
      </if>
      <if test="sunshineTime != null" >
        sunshine_time = #{sunshineTime,jdbcType=INTEGER},
      </if>
      <if test="dailyMinPressure != null" >
        daily_min_pressure = #{dailyMinPressure,jdbcType=INTEGER},
      </if>
      <if test="dailyMinTemperature != null" >
        daily_min_temperature = #{dailyMinTemperature,jdbcType=INTEGER},
      </if>
      <if test="dailyMaxPressure != null" >
        daily_max_pressure = #{dailyMaxPressure,jdbcType=INTEGER},
      </if>
      <if test="dailyMaxTemperature != null" >
        daily_max_temperature = #{dailyMaxTemperature,jdbcType=INTEGER},
      </if>
      <if test="maxWindSpeed != null" >
        max_wind_speed = #{maxWindSpeed,jdbcType=INTEGER},
      </if>
      <if test="directionMaxWindspeed != null" >
        direction_max_windspeed = #{directionMaxWindspeed,jdbcType=VARCHAR},
      </if>
      <if test="minRelativeHumidity != null" >
        min_relative_humidity = #{minRelativeHumidity,jdbcType=INTEGER},
      </if>
    </set>
    where weather_id = #{weatherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edupractice.malaria.modules.common.pojo.WeatherData" >
    update weather_data
    set station_id = #{stationId,jdbcType=INTEGER},
      weather_year = #{weatherYear,jdbcType=INTEGER},
      weather_month = #{weatherMonth,jdbcType=INTEGER},
      weather_day = #{weatherDay,jdbcType=INTEGER},
      precipitation2020 = #{precipitation2020,jdbcType=VARCHAR},
      maximum_wind_speed = #{maximumWindSpeed,jdbcType=INTEGER},
      direction_maximum_wind_speed = #{directionMaximumWindSpeed,jdbcType=VARCHAR},
      ave_pressure = #{avePressure,jdbcType=INTEGER},
      ave_wind_speed = #{aveWindSpeed,jdbcType=INTEGER},
      ave_temperature = #{aveTemperature,jdbcType=INTEGER},
      ave_vapor_pressure = #{aveVaporPressure,jdbcType=INTEGER},
      ave_relative_humidity = #{aveRelativeHumidity,jdbcType=INTEGER},
      sunshine_time = #{sunshineTime,jdbcType=INTEGER},
      daily_min_pressure = #{dailyMinPressure,jdbcType=INTEGER},
      daily_min_temperature = #{dailyMinTemperature,jdbcType=INTEGER},
      daily_max_pressure = #{dailyMaxPressure,jdbcType=INTEGER},
      daily_max_temperature = #{dailyMaxTemperature,jdbcType=INTEGER},
      max_wind_speed = #{maxWindSpeed,jdbcType=INTEGER},
      direction_max_windspeed = #{directionMaxWindspeed,jdbcType=VARCHAR},
      min_relative_humidity = #{minRelativeHumidity,jdbcType=INTEGER}
    where weather_id = #{weatherId,jdbcType=INTEGER}
  </update>
</mapper>